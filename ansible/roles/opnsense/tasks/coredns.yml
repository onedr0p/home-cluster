---

- name: Create k8s directory on Opnsense
  ansible.builtin.file:
    path: /root/k8s
    state: directory

- name: Create Corefile on Opnsense
  ansible.builtin.template:
    src: Corefile.j2
    dest: /root/k8s/Corefile

- name: Enable CoreDNS at startup on Opnsense
  ansible.builtin.template:
    src: 99-coredns.j2
    dest: /usr/local/etc/rc.syshook.d/start/99-coredns

- name: Checkout CoreDNS Git Repository locally
  delegate_to: localhost
  run_once: true
  ansible.builtin.git:
    repo: https://github.com/coredns/coredns
    dest: /tmp/coredns
    version: v1.8.4
    force: true

- name: Download plugin.cfg locally
  delegate_to: localhost
  run_once: true
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/k8s-at-home/container-images/main/apps/coredns/plugin.cfg
    dest: /tmp/coredns/plugin.cfg

- name: Go get dependencies locally
  delegate_to: localhost
  run_once: true
  ansible.builtin.shell: |
    go get github.com/openshift/coredns-mdns
    go get github.com/coredns/alternate
    go get github.com/jwhited/wgsd
    go get github.com/miekg/coredns-git
    go get github.com/ori-edge/k8s_gateway
    go generate
    go mod tidy
  args:
    chdir: /tmp/coredns

- name: Build CoreDNS for FreeBSD locally
  delegate_to: localhost
  run_once: true
  ansible.builtin.make:
    chdir: /tmp/coredns
    target: coredns
    params:
      GOOS: freebsd
      GOARCH: amd64

- name: Kill running CoreDNS on Opnsense
  ansible.builtin.shell: |
    killall coredns --wait
  ignore_errors: true

- name: Copy kubeconfig to Opnsense
  ansible.builtin.copy:
    src: /tmp/kubeconfig-homedns
    dest: /root/k8s/kubeconfig
    mode: 0755

- name: Copy CoreDNS to Opnsense
  ansible.builtin.copy:
    src: /tmp/coredns/coredns
    dest: /root/k8s/coredns
    mode: 0755

- name: Run CoreDNS on Opnsense
  ansible.builtin.shell: |
    /root/k8s/coredns -conf /root/k8s/Corefile -pidfile /var/run/coredns.pid > /var/log/coredns.log &
  ignore_errors: true
